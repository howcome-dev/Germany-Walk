/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Alfa+Slab+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

.bl_header {
  display: flex;
  flex-flow: wrap;
  justify-content: space-between;
  background: #FED842;
  padding-bottom: 2em; }

@media only screen and (min-width: 768px) {
  .bl_header {
    width: 100%; } }

.bl_header {
  margin-bottom: 2em; }

.bl_header_logo {
  margin-bottom: 1em; }

.bl_header_logoLink {
  font-family: 'Alfa Slab One', cursive;
  color: #F2F2F2;
  text-shadow: #2F3B4C 0px 4px 3px;
  background: linear-gradient(#2F3B4C 33.3%, #BC000F 0, #BC000F 66.6%, #FED842 0);
  padding: 16%;
  margin-top: -.7em;
  transform: rotate(-10deg);
  -webkit-filter: drop-shadow(-3px 6px 6px #2F3B4C);
  filter: drop-shadow(-3px 6px 6px #2F3B4C); }

.bl_header_nav {
  display: flex;
  flex-flow: wrap;
  justify-content: space-between;
  width: 90%;
  padding: 3px;
  margin: 1em auto 0; }

.bl_header_list {
  width: 30%; }

.bl_header_link {
  color: #FED842;
  background: #2F3B4C;
  text-align: center;
  padding: .5em 0; }

.bl_header_link:hover {
  color: #FED842;
  background: #BC000F; }

.bl_header_lede {
  width: 90%;
  text-align: right;
  margin: 0 auto; }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

.bl_aside {
  background: #FED842;
  box-shadow: 0 2px 6px rgba(47, 59, 76, 0.32);
  padding: 30px 20px; }

@media only screen and (min-width: 768px) {
  .bl_aside {
    width: 30%; } }

.bl_aside_inner {
  width: 98%;
  margin: 0 auto 3em; }

@media only screen and (min-width: 768px) {
  .bl_aside_ttl {
    margin-bottom: 1em; } }

.bl_aside_link {
  color: #BC000F;
  background: #F2F2F2;
  text-align: center;
  padding: 1.2em; }

@media only screen and (min-width: 768px) {
  .bl_aside_link {
    width: 40%;
    margin: 0 auto; } }

.bl_aside_notes {
  text-align: center; }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

.bl_index {
  width: 100%; }

@media only screen and (min-width: 768px) {
  .bl_index {
    display: flex;
    flex-flow: wrap;
    justify-content: center;
    align-items: center; } }

.bl_index_img {
  text-align: right;
  margin-bottom: 2em; }

@media only screen and (min-width: 768px) {
  .bl_index_img {
    position: relative;
    margin: 0; } }

@media only screen and (min-width: 768px) {
  .bl_index_left {
    width: 60%; } }

@media only screen and (min-width: 768px) {
  .bl_index_right {
    width: 36%; } }

.bl_index_txt {
  color: #2F3B4C;
  padding: .5em; }

@media only screen and (min-width: 768px) {
  .bl_index_txt {
    color: #FED842;
    background: #2F3B4C;
    position: absolute;
    bottom: 0;
    right: 0;
    padding: .2em; } }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

.bl_about_ttl {
  font-weight: bold;
  padding-top: 0; }

@media only screen and (min-width: 768px) {
  .bl_about_inner {
    display: flex;
    align-items: flex-start; } }

@media only screen and (min-width: 768px) {
  .bl_about_txt {
    width: 60%;
    padding-right: 3em;
    margin-top: 0; } }

.bl_about_img {
  width: 100%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .bl_about_img {
    width: 50%; } }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

.bl_event {
  text-align: center; }

.bl_event_th {
  width: 25%;
  color: #F2F2F2;
  background: #2F3B4C; }

.bl_event_month {
  color: #F2F2F2;
  background: #2F3B4C; }

.bl_event_td {
  color: #2F3B4C;
  background: #FED842; }

body {
  font-family: 'Noto Sans JP', sans-serif;
  margin: 0;
  color: #2F3B4C;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

a {
  display: block;
  text-decoration: none; }

img {
  width: 100%;
  vertical-align: bottom; }

h1 {
  margin: 0; }

li {
  list-style: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    display: flex;
    justify-content: space-between;
    margin: 4em auto; } }

.ly_wrapper_conts {
  margin-bottom: 5em; }

.ly_wrapper_conts:first-child {
  margin-top: 2em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts:first-child {
    margin-top: 0; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper_conts {
    width: 60%;
    padding-right: 3em; } }

.ly_wrapper_ttl {
  color: #FED842;
  background: #BC000F;
  padding: 3%;
  margin-top: 0; }

@media only screen and (min-width: 768px) {
  .ly_wrapper_ttl {
    margin: 0 auto 2em; } }

footer {
  text-align: center; }

@media only screen and (min-width: 768px) {
  .bl_list {
    display: flex;
    flex-flow: wrap;
    justify-content: space-between; }
  .bl_list_ttl {
    width: 100%; }
  .bl_list_txt {
    width: 100%;
    margin: 0; }
  .bl_list_conts {
    width: 30%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
